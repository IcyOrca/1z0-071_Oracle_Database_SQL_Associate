Correlated subqueries in Oracle SQL are subqueries that reference columns from the outer query. 
They are useful when you want to update or delete rows based on conditions that involve values from both the outer and inner queries. 
Here are examples of using correlated subqueries for updating and deleting rows:

Example: Updating Rows with Correlated Subquery
Suppose you have a "students" table, and you want to update the grades of students to the maximum grade in their respective courses:
    UPDATE students s
       SET grade = (SELECT MAX(grade) 
                      FROM students 
                     WHERE course_id = s.course_id);

In this example:
    The main query updates the "students" table (aliased as s).
    The correlated subquery (SELECT MAX(grade) FROM students WHERE course_id = s.course_id) calculates the maximum grade for each course.
    The SET grade = ... part updates the "grade" column for each student to the maximum grade in their respective courses.

Example: Deleting Rows with Correlated Subquery
Suppose you have an "employees" table, and you want to delete employees who earn less than the average salary in their department:
    DELETE employees e
     WHERE salary < (SELECT AVG(salary) 
                       FROM employees 
                      WHERE department_id = e.department_id);

In this example:
    The main query deletes rows from the "employees" table (aliased as e).
    The correlated subquery (SELECT AVG(salary) FROM employees WHERE department_id = e.department_id) calculates the average salary for each department.
    The WHERE salary < ... condition ensures that only employees with salaries less than the average salary in their department are deleted.

These examples illustrate how you can use correlated subqueries in Oracle SQL to update or delete rows based on 
conditions involving values from both the outer and inner queries. 
Always be cautious when using correlated subqueries, as they may have performance implications
, especially if the subquery is executed for each row in the outer query. 
Ensure that your subqueries are efficiently designed and necessary for your specific use case.