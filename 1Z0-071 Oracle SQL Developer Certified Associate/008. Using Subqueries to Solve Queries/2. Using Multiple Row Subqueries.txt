In Oracle SQL, a multiple-row subquery is a query that returns more than one row. 
These subqueries can be used in various parts of a SQL statement, such as SELECT, WHERE, and HAVING clauses. 
Here is an example of using a multiple-row subquery:

Example: Using Multiple Row Subquery in a WHERE Clause
Suppose you have a "departments" table, and you want to retrieve employees whose salaries are greater than the average salary for their department:
    SELECT employee_id
         , employee_name
         , salary
         , department_id
      FROM employees
     WHERE salary > ALL (SELECT AVG(salary) 
                           FROM employees
                          WHERE department_id = employees.department_id);

In this example:
    The main query retrieves information from the "employees" table.
    The subquery (SELECT AVG(salary) FROM employees WHERE department_id = employees.department_id) calculates the average salary for each department.
    The ALL keyword is used to compare the salary of each employee with all the average salaries for their department. 
    The employee is included in the result set if their salary is greater than all the average salaries.

You can also use multiple-row subqueries in other contexts. For instance, you might use them in a SELECT clause to retrieve values based on a condition:
    SELECT employee_id
         , employee_name
         , (SELECT MAX(salary) 
              FROM employees 
             WHERE department_id = employees.department_id) AS max_department_salary
      FROM employees;

In this example, the main query retrieves employee information, and the subquery calculates the maximum salary for each department. 
The result set includes the employee ID, employee name, and the maximum salary for the employee's department.

Multiple-row subqueries allow you to perform comparisons or calculations across multiple rows in a subquery 
and are useful in scenarios where you need to compare a value against multiple values.

Always ensure that your multiple-row subqueries are used in contexts where multiple values are expected, and you understand how the subquery results relate to the main query.